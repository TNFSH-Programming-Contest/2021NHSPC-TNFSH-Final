name: Build pdf

on:
  push:
    paths:
      - '*/scripts/statement.sh'
      - '*/statement/*.jpg'
      - '*/statement/index.md'
      - '*/problem.json'
      - '*/subtasks.json'
      - 'template.tex'
      - 'cover.tex'
  workflow_dispatch:
    inputs:
      target:
        description: 'Problem labels to build'
        default: 'ABCDEF'

jobs:
  check-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        problem: [A, B, C, D, E, F]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Make flags dir
        run: |
          mkdir -p /home/runner/flags/
          touch /home/runner/flags/.keep

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: 'json'
          filters: |
            pdf:
              - p${{ matrix.problem }}/scripts/statement.sh
              - p${{ matrix.problem }}/statement/*.jpg
              - p${{ matrix.problem }}/statement/index.md
              - template.tex
            cover:
              - cover.tex

      - name: Set problem flag
        if: steps.changes.outputs.pdf == 'true' || (matrix.problem == 'A' && steps.changes.outputs.cover == 'true')
        run: |
          echo "${{ matrix.problem }}" > /home/runner/flags/${{ matrix.problem }}

      - name: Check changes in config
        run: |
          set +e

          git diff ${{ github.event.before }}..HEAD -U0 p${{ matrix.problem }}/problem.json | grep '"contest_name"\|"problem_label"\|"name"\|"title"\|"memory_limit"\|"time_limit"'
          if [ $? -eq 0 ]; then
            echo "${{ matrix.problem }}" > /home/runner/flags/${{ matrix.problem }}
          else
            echo "No changes in problem.json for pdf";
          fi

          git diff ${{ github.event.before }}..HEAD -U0 p${{ matrix.problem }}/subtasks.json | grep '"index"\|"score"\|"text"'
          if [ $? -eq 0 ]; then
            echo "${{ matrix.problem }}" > /home/runner/flags/${{ matrix.problem }}
          else
            echo "No changes in subtasks.json for pdf";
          fi

      - name: Upload flags
        uses: actions/upload-artifact@v2
        with:
          name: flags
          path: /home/runner/flags/

  check-manually:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        problem: [A, B, C, D, E, F]

    steps:
      - name: Make flags dir
        run: |
          mkdir -p /home/runner/flags/
          touch /home/runner/flags/.keep

      - name: Set problem flag
        if: contains(github.event.inputs.target, matrix.problem)
        run: |
          echo "${{ matrix.problem }}" > /home/runner/flags/${{ matrix.problem }}

      - name: Upload flags
        uses: actions/upload-artifact@v2
        with:
          name: flags
          path: /home/runner/flags/

  build-pdf:
    needs: [check-push, check-manually]
    if: always()
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Download flags
        uses: actions/download-artifact@v2
        with:
          name: flags
          path: /home/runner/flags/

      - name: Install tps
        run: |
          git clone https://github.com/ioi-2017/tps.git
          cd tps && sudo ./install-tps.sh

      - name: Install pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-1-amd64.deb
          sudo dpkg -i pandoc-2.10.1-1-amd64.deb

      - name: Install xetex
        run: |
          sudo add-apt-repository ppa:jonathonf/texlive-2019
          sudo apt-get update
          sudo apt-get install texlive-xetex

      - name: Install fonts
        run: |
          sudo mkdir -p /usr/share/fonts/opentype/noto
          wget -nv https://noto-website-2.storage.googleapis.com/pkgs/NotoSansCJK-Regular.ttc.zip
          unzip NotoSansCJK-Regular.ttc.zip -d NotoSansCJK-Regular
          ls -al NotoSansCJK-Regular
          sudo cp NotoSansCJK-Regular/NotoSansCJK-Regular.ttc /usr/share/fonts/opentype/noto
          wget -nv https://noto-website-2.storage.googleapis.com/pkgs/NotoSansCJK-Bold.ttc.zip
          unzip NotoSansCJK-Bold.ttc.zip -d NotoSansCJK-Bold
          ls -al NotoSansCJK-Bold
          sudo cp NotoSansCJK-Bold/NotoSansCJK-Bold.ttc /usr/share/fonts/opentype/noto
          ls -al /usr/share/fonts/opentype/noto
          sudo fc-cache -f -v

      - name: Install pdfunite
        run: |
          sudo apt-get install poppler-utils

      - name: Check environment
        working-directory: pA
        run: |
          lsb_release -a
          echo ""
          pandoc -v
          echo ""
          xetex -v
          echo ""
          tps || :;
          echo ""
          fc-list | grep "Noto Sans Mono CJK TC" || :;
          echo ""
          pdfunite -v

      - name: Check target
        id: target
        working-directory: /home/runner/flags/
        run: |
          probs=$(ls -m .)
          echo $probs
          echo "::set-output name=problems::$probs"

      - name: Build cover
        if: contains(steps.target.outputs.problems, 'A')
        run: |
          xelatex cover.tex

      - name: Build pdf
        run: |
          for prob in $(cat /home/runner/flags/*); do
            cd p${prob} && tps statement && cd ..
          done

      - name: Merge cover into pA
        if: contains(steps.target.outputs.problems, 'A')
        run: |
          pdfunite cover.pdf pA/statement/index.pdf pA/statement/index-with-cover.pdf
          rm pA/statement/index.pdf
          mv pA/statement/index-with-cover.pdf pA/statement/index.pdf

      - name: Merge pdfs
        run: |
          mkdir -p pA/attachments
          pdfunite pA/statement/index.pdf pB/statement/index.pdf pC/statement/index.pdf pA/attachments/problems.pdf

      - name: Check diff
        run: |
          git diff --name-only

      - name: Commit pdf
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git status
          for prob in $(cat /home/runner/flags/*); do
            git add p${prob}/statement/index.pdf
          done
          git add pA/attachments/problems.pdf
          git pull
          git diff-index --quiet HEAD -- || git commit -m "Build pdf"
          git push
